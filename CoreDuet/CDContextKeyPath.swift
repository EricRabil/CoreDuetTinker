//
//  CDContextKeyPath.swift
//  CoreDuetTinker
//
//  Created by Eric Rabil on 6/29/21.
//

import Foundation
import CoreDuetContext

enum CDContextKeyPath: String, Codable, CaseIterable {
    case defaultPairedDeviceCellQuality
    case defaultPairedDeviceWiFiWiredQuality
    case activeComplications
    case defaultPairedDeviceForegroundApp
    case watchForegroundApp
    case defaultPairedDeviceThermalPressureLevel
    case watchThermalPressureLevel
    case defaultPairedDevicePluginStatus
    case watchPluginStatus
    case defaultPairedDeviceBatteryLevel
    case watchBatteryLevel
    case watchActiveStatus
    case defaultPairedDeviceNearbyStatus
    case watchNearbyStatus
    case networkingBudgetRemainingStatus
    case energyBudgetRemainingStatus
    case nearbyLOIIdentifiers
    case cPUUsageLevel
    case thermalPressureLevel
    case pluginStatus
    case batteryLevel
    case lowBattery
    case systemTime
    case motionState
    case workoutStatus
    case carplayConnectedStatus
    case cellConnectionQuality
    case wiFiConnectionQuality
    case wiredConnectionQuality
    case wiFiConnectionSSID
    case airplaneModeStatus
    case doNotDisturbStatus
    case lowPowerModeStatus
    case deviceID
    case deviceName
    case siriActiveStatus
    case carConnectedStatus
    case navigationStatus
    case mediaPlayingStatus
    case keybagLockStatus
    case deviceLockStatus
    case firstWakeupStatus
    case nextUserVisibleWakeDate
    case deviceAssertionsHeldStatus
    case displayOnBeforeFirstUnlockOfTheDayStatus
    case backlightOnStatus
    case callInProgressStatus
    case foregroundApp
    case lastUseDate
    case inUseStatus
    case homeKitSceneDataDictionary
    case recentMessages
    case recentEmails
    case locationCoordinates
    case appUsageDataDictionaries
    case appWebUsageDataDictionaries
    case batteryStateDataDictionary
    case intentsDataDictionary
    case circularLocationRegions
    case homeKitAccessoryDataDictionary
    case appDataDictionary
    case predictedLocationOfInterestTransitions
    case activeCall
    case nowPlayingDataDictionary
    case audioOutputDataDictionary
    case defaultPairedServicesAppearingForeground
    case servicesAppearingForeground
    case workoutDataDictionary
    case homeKitAppViewDataDictionary
    case sunriseSunsetDataDictionary
    case bluetoothDataDictionary
    case userActivityDataDictionary
    case nFCTagIdentifiers
    case mDCSProxies
    case currentTimers
    case currentAlarms
    case siriServiceDataDictionary
    case doNotDisturbStatusDataDictionary
    
    var keyPath: _CDContextualKeyPath {
        switch self {
        case .defaultPairedDeviceCellQuality:
            return _CDContextQueries.keyPathForDefaultPairedDeviceCellQuality()
        case .defaultPairedDeviceWiFiWiredQuality:
            return _CDContextQueries.keyPathForDefaultPairedDeviceWiFiWiredQuality()
        case .activeComplications:
            return _CDContextQueries.keyPathForActiveComplications()
        case .defaultPairedDeviceForegroundApp:
            return _CDContextQueries.keyPathForDefaultPairedDeviceForegroundApp()
        case .watchForegroundApp:
            return _CDContextQueries.keyPathForWatchForegroundApp()
        case .defaultPairedDeviceThermalPressureLevel:
            return _CDContextQueries.keyPathForDefaultPairedDeviceThermalPressureLevel()
        case .watchThermalPressureLevel:
            return _CDContextQueries.keyPathForWatchThermalPressureLevel()
        case .defaultPairedDevicePluginStatus:
            return _CDContextQueries.keyPathForDefaultPairedDevicePluginStatus()
        case .watchPluginStatus:
            return _CDContextQueries.keyPathForWatchPluginStatus()
        case .defaultPairedDeviceBatteryLevel:
            return _CDContextQueries.keyPathForDefaultPairedDeviceBatteryLevel()
        case .watchBatteryLevel:
            return _CDContextQueries.keyPathForWatchBatteryLevel()
        case .watchActiveStatus:
            return _CDContextQueries.keyPathForWatchActiveStatus()
        case .defaultPairedDeviceNearbyStatus:
            return _CDContextQueries.keyPathForDefaultPairedDeviceNearbyStatus()
        case .watchNearbyStatus:
            return _CDContextQueries.keyPathForWatchNearbyStatus()
        case .networkingBudgetRemainingStatus:
            return _CDContextQueries.keyPathForNetworkingBudgetRemainingStatus()
        case .energyBudgetRemainingStatus:
            return _CDContextQueries.keyPathForEnergyBudgetRemainingStatus()
        case .nearbyLOIIdentifiers:
            return _CDContextQueries.keyPathForNearbyLOIIdentifiers()
        case .cPUUsageLevel:
            return _CDContextQueries.keyPathForCPUUsageLevel()
        case .thermalPressureLevel:
            return _CDContextQueries.keyPathForThermalPressureLevel()
        case .pluginStatus:
            return _CDContextQueries.keyPathForPluginStatus()
        case .batteryLevel:
            return _CDContextQueries.keyPathForBatteryLevel()
        case .lowBattery:
            return _CDContextQueries.keyPathForLowBattery()
        case .systemTime:
            return _CDContextQueries.keyPathForSystemTime()
        case .motionState:
            return _CDContextQueries.keyPathForMotionState()
        case .workoutStatus:
            return _CDContextQueries.keyPathForWorkoutStatus()
        case .carplayConnectedStatus:
            return _CDContextQueries.keyPathForCarplayConnectedStatus()
        case .cellConnectionQuality:
            return _CDContextQueries.keyPathForCellConnectionQuality()
        case .wiFiConnectionQuality:
            return _CDContextQueries.keyPathForWiFiConnectionQuality()
        case .wiredConnectionQuality:
            return _CDContextQueries.keyPathForWiredConnectionQuality()
        case .wiFiConnectionSSID:
            return _CDContextQueries.keyPathForWiFiConnectionSSID()
        case .airplaneModeStatus:
            return _CDContextQueries.keyPathForAirplaneModeStatus()
        case .doNotDisturbStatus:
            return _CDContextQueries.keyPathForDoNotDisturbStatus()
        case .lowPowerModeStatus:
            return _CDContextQueries.keyPathForLowPowerModeStatus()
        case .deviceID:
            return _CDContextQueries.keyPathForDeviceID()
        case .deviceName:
            return _CDContextQueries.keyPathForDeviceName()
        case .siriActiveStatus:
            return _CDContextQueries.keyPathForSiriActiveStatus()
        case .carConnectedStatus:
            return _CDContextQueries.keyPathForCarConnectedStatus()
        case .navigationStatus:
            return _CDContextQueries.keyPathForNavigationStatus()
        case .mediaPlayingStatus:
            return _CDContextQueries.keyPathForMediaPlayingStatus()
        case .keybagLockStatus:
            return _CDContextQueries.keyPathForKeybagLockStatus()
        case .deviceLockStatus:
            return _CDContextQueries.keyPathForDeviceLockStatus()
        case .firstWakeupStatus:
            return _CDContextQueries.keyPathForFirstWakeupStatus()
        case .nextUserVisibleWakeDate:
            return _CDContextQueries.keyPathForNextUserVisibleWakeDate()
        case .deviceAssertionsHeldStatus:
            return _CDContextQueries.keyPathForDeviceAssertionsHeldStatus()
        case .displayOnBeforeFirstUnlockOfTheDayStatus:
            return _CDContextQueries.keyPathForDisplayOnBeforeFirstUnlockOfTheDayStatus()
        case .backlightOnStatus:
            return _CDContextQueries.keyPathForBacklightOnStatus()
        case .callInProgressStatus:
            return _CDContextQueries.keyPathForCallInProgressStatus()
        case .foregroundApp:
            return _CDContextQueries.keyPathForForegroundApp()
        case .lastUseDate:
            return _CDContextQueries.keyPathForLastUseDate()
        case .inUseStatus:
            return _CDContextQueries.keyPathForInUseStatus()
        case .homeKitSceneDataDictionary:
            return _CDContextQueries.keyPathForHomeKitSceneDataDictionary()
        case .recentMessages:
            return _CDContextQueries.keyPathForRecentMessages()
        case .recentEmails:
            return _CDContextQueries.keyPathForRecentEmails()
        case .locationCoordinates:
            return _CDContextQueries.keyPathForLocationCoordinates()
        case .appUsageDataDictionaries:
            return _CDContextQueries.keyPathForAppUsageDataDictionaries()
        case .appWebUsageDataDictionaries:
            return _CDContextQueries.keyPathForAppWebUsageDataDictionaries()
        case .batteryStateDataDictionary:
            return _CDContextQueries.keyPathForBatteryStateDataDictionary()
        case .intentsDataDictionary:
            return _CDContextQueries.keyPathForIntentsDataDictionary()
        case .circularLocationRegions:
            return _CDContextQueries.keyPathForCircularLocationRegions()
        case .homeKitAccessoryDataDictionary:
            return _CDContextQueries.keyPathForHomeKitAccessoryDataDictionary()
        case .appDataDictionary:
            return _CDContextQueries.keyPathForAppDataDictionary()
        case .predictedLocationOfInterestTransitions:
            return _CDContextQueries.keyPathForPredictedLocationOfInterestTransitions()
        case .activeCall:
            return _CDContextQueries.keyPathForActiveCall()
        case .nowPlayingDataDictionary:
            return _CDContextQueries.keyPathForNowPlayingDataDictionary()
        case .audioOutputDataDictionary:
            return _CDContextQueries.keyPathForAudioOutputDataDictionary()
        case .defaultPairedServicesAppearingForeground:
            return _CDContextQueries.keyPathForDefaultPairedServicesAppearingForeground()
        case .servicesAppearingForeground:
            return _CDContextQueries.keyPathForServicesAppearingForeground()
        case .workoutDataDictionary:
            return _CDContextQueries.keyPathForWorkoutDataDictionary()
        case .homeKitAppViewDataDictionary:
            return _CDContextQueries.keyPathForHomeKitAppViewDataDictionary()
        case .sunriseSunsetDataDictionary:
            return _CDContextQueries.keyPathForSunriseSunsetDataDictionary()
        case .bluetoothDataDictionary:
            return _CDContextQueries.keyPathForBluetoothDataDictionary()
        case .userActivityDataDictionary:
            return _CDContextQueries.keyPathForUserActivityDataDictionary()
        case .nFCTagIdentifiers:
            return _CDContextQueries.keyPathForNFCTagIdentifiers()
        case .mDCSProxies:
            return _CDContextQueries.keyPathForMDCSProxies()
        case .currentTimers:
            return _CDContextQueries.keyPathForCurrentTimers()
        case .currentAlarms:
            return _CDContextQueries.keyPathForCurrentAlarms()
        case .siriServiceDataDictionary:
            return _CDContextQueries.keyPathForSiriServiceDataDictionary()
        case .doNotDisturbStatusDataDictionary:
            return _CDContextQueries.keyPathForDoNotDisturbStatusDataDictionary()
        }
    }
    
    // the predicates basically say "just give me changes from <insert keypath>"
    var predicate: _CDContextualPredicate {
        _CDContextualPredicate.predicateForChange(atKeyPath: keyPath) as! _CDContextualPredicate
    }
}
